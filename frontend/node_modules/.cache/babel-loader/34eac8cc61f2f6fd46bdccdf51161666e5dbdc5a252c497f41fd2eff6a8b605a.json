{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\VSCode\\\\FrontEnd\\\\a_p_do_file\\\\frontend\\\\src\\\\FileUpload\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\n// FileUpload.jsx\nimport React, { useState } from 'react';\nimport { Typography, Button, LinearProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onFileUpload\n}) => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    setUploading(true);\n    onFileUpload(file).then(() => {\n      setUploading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Upload a File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), uploading && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"7fSqO2OqLYyCuGUs/ZTqKghpSFk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Typography","Button","LinearProgress","jsxDEV","_jsxDEV","FileUpload","onFileUpload","_s","uploading","setUploading","handleFileUpload","e","file","target","files","then","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["D:/Code/VSCode/FrontEnd/a_p_do_file/frontend/src/FileUpload/FileUpload.jsx"],"sourcesContent":["// FileUpload.jsx\r\nimport React, { useState } from 'react';\r\nimport { Typography, Button, LinearProgress } from '@mui/material';\r\n\r\nconst FileUpload = ({ onFileUpload }) => {\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    setUploading(true);\r\n    onFileUpload(file).then(() => {\r\n      setUploading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Upload a File</Typography>\r\n      <input type=\"file\" onChange={handleFileUpload} />\r\n      {uploading && <LinearProgress />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,EAAEC,MAAM,EAAEC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BL,YAAY,CAAC,IAAI,CAAC;IAClBH,YAAY,CAACM,IAAI,CAAC,CAACG,IAAI,CAAC,MAAM;MAC5BN,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA,CAACJ,UAAU;MAACiB,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACnDjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEb;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChDb,SAAS,iBAAIJ,OAAA,CAACF,cAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAACd,EAAA,CAlBIF,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAoBhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}