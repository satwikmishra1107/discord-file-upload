{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\VSCode\\\\FrontEnd\\\\a_p_do_file\\\\frontend\\\\src\\\\FileUpload\\\\UploadedFilesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { List, ListItem, ListItemText, Typography, Box, styled, CircularProgress, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListItemStyled = styled(ListItem)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  padding: theme.spacing(1),\n  borderRadius: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}));\n_c = ListItemStyled;\nconst FileHashTypography = styled(Typography)(({\n  theme\n}) => ({\n  fontWeight: \"bold\"\n}));\n_c2 = FileHashTypography;\nconst UploadedFilesList = ({\n  uploadedFiles\n}) => {\n  _s();\n  const [downloadProgress, setDownloadProgress] = useState({});\n  console.log(uploadedFiles.fileHash, uploadedFiles.fileSize, uploadedFiles.fileExtension, uploadedFiles.fileSize);\n  const handleDownload = async (fileHash, fileSize, fileExtension) => {\n    try {\n      setDownloadProgress(prevState => ({\n        ...prevState,\n        [fileHash]: 0\n      }));\n      console.log(fileExtension);\n      const response = await fetch(`http://localhost:8000/api/retrieve/${fileHash}?fileSize=${fileSize}&fileExtension=${fileExtension}`, {\n        method: \"GET\",\n        responseType: \"blob\",\n        onProgress: event => {\n          const progress = Math.round(event.loaded / event.total * 100);\n          setDownloadProgress(prevState => ({\n            ...prevState,\n            [fileHash]: progress\n          }));\n        }\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const downloadUrl = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n        link.download = `${fileHash}${fileExtension}`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        console.error(\"Error downloading file\");\n      }\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n    } finally {\n      setDownloadProgress(prevState => ({\n        ...prevState,\n        [fileHash]: 0\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 2,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(ListItemStyled, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FileHashTypography, {\n              children: [\"File Name: \", file.fileName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), \"File Size: \", (file.fileSize / (1024 * 1024)).toFixed(2), \" MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => handleDownload(file.fileHash, file.fileSize, file.fileExtension),\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), downloadProgress[file.fileHash] > 0 && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              variant: \"determinate\",\n              value: downloadProgress[file.fileHash],\n              size: 24,\n              style: {\n                marginLeft: \"8px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadedFilesList, \"0Amleaz5kakMfJrWiPbmPZRz2gY=\");\n_c3 = UploadedFilesList;\nexport default UploadedFilesList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ListItemStyled\");\n$RefreshReg$(_c2, \"FileHashTypography\");\n$RefreshReg$(_c3, \"UploadedFilesList\");","map":{"version":3,"names":["React","useState","List","ListItem","ListItemText","Typography","Box","styled","CircularProgress","Button","jsxDEV","_jsxDEV","ListItemStyled","theme","backgroundColor","palette","background","paper","padding","spacing","borderRadius","marginBottom","_c","FileHashTypography","fontWeight","_c2","UploadedFilesList","uploadedFiles","_s","downloadProgress","setDownloadProgress","console","log","fileHash","fileSize","fileExtension","handleDownload","prevState","response","fetch","method","responseType","onProgress","event","progress","Math","round","loaded","total","ok","blob","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","error","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","file","index","primary","Fragment","toFixed","secondary","color","onClick","value","size","style","marginLeft","_c3","$RefreshReg$"],"sources":["D:/Code/VSCode/FrontEnd/a_p_do_file/frontend/src/FileUpload/UploadedFilesList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Box,\r\n  styled,\r\n  CircularProgress,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nconst ListItemStyled = styled(ListItem)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.paper,\r\n  padding: theme.spacing(1),\r\n  borderRadius: theme.spacing(1),\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\nconst FileHashTypography = styled(Typography)(({ theme }) => ({\r\n  fontWeight: \"bold\",\r\n}));\r\n\r\nconst UploadedFilesList = ({ uploadedFiles }) => {\r\n  const [downloadProgress, setDownloadProgress] = useState({});\r\n  console.log(uploadedFiles.fileHash, uploadedFiles.fileSize, uploadedFiles.fileExtension, uploadedFiles.fileSize);\r\n  const handleDownload = async (fileHash, fileSize, fileExtension) => {\r\n    try {\r\n      setDownloadProgress((prevState) => ({\r\n        ...prevState,\r\n        [fileHash]: 0,\r\n      }));\r\n      console.log(fileExtension);\r\n      const response = await fetch(\r\n        `http://localhost:8000/api/retrieve/${fileHash}?fileSize=${fileSize}&fileExtension=${fileExtension}`,\r\n        {\r\n          method: \"GET\",\r\n          responseType: \"blob\",\r\n          onProgress: (event) => {\r\n            const progress = Math.round((event.loaded / event.total) * 100);\r\n            setDownloadProgress((prevState) => ({\r\n              ...prevState,\r\n              [fileHash]: progress,\r\n            }));\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const blob = await response.blob();\r\n        const downloadUrl = window.URL.createObjectURL(blob);\r\n        const link = document.createElement(\"a\");\r\n        link.href = downloadUrl;\r\n        link.download = `${fileHash}${fileExtension}`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      } else {\r\n        console.error(\"Error downloading file\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error downloading file:\", error);\r\n    } finally {\r\n      setDownloadProgress((prevState) => ({\r\n        ...prevState,\r\n        [fileHash]: 0,\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box mt={2}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Uploaded Files\r\n      </Typography>\r\n      <List>\r\n        {uploadedFiles.map((file, index) => (\r\n          <ListItemStyled key={index}>\r\n            <ListItemText\r\n              primary={\r\n                <React.Fragment>\r\n                  <FileHashTypography>\r\n                    File Name: {file.fileName}\r\n                  </FileHashTypography>\r\n                  <br />\r\n                  File Size: {(file.fileSize / (1024 * 1024)).toFixed(2)} MB\r\n                </React.Fragment>\r\n              }\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() =>\r\n                      handleDownload(\r\n                        file.fileHash,\r\n                        file.fileSize,\r\n                        file.fileExtension\r\n                      )\r\n                    }\r\n                  >\r\n                    Download\r\n                  </Button>\r\n                  {downloadProgress[file.fileHash] > 0 && (\r\n                    <CircularProgress\r\n                      variant=\"determinate\"\r\n                      value={downloadProgress[file.fileHash]}\r\n                      size={24}\r\n                      style={{ marginLeft: \"8px\" }}\r\n                    />\r\n                  )}\r\n                </React.Fragment>\r\n              }\r\n            />\r\n          </ListItemStyled>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UploadedFilesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}