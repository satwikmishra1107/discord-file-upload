{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\VSCode\\\\FrontEnd\\\\a_p_do_file\\\\frontend\\\\src\\\\FileUpload\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, LinearProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const onFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const onFileUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    const config = {\n      onUploadProgress: progressEvent => {\n        const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        setUploadProgress(percentCompleted);\n      }\n    };\n    try {\n      await axios.post('/upload', formData, config);\n      alert('File uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading file', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: onFileUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: uploadProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"RpOFqOEOJqVkWYW5UQI7ytlh3VI=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Button","LinearProgress","axios","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","uploadProgress","setUploadProgress","onFileChange","e","target","files","onFileUpload","formData","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","post","alert","error","console","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","value","_c","$RefreshReg$"],"sources":["D:/Code/VSCode/FrontEnd/a_p_do_file/frontend/src/FileUpload/FileUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, LinearProgress } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = () => {\r\n const [file, setFile] = useState(null);\r\n const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n const onFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n };\r\n\r\n const onFileUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    const config = {\r\n      onUploadProgress: (progressEvent) => {\r\n        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n        setUploadProgress(percentCompleted);\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.post('/upload', formData, config);\r\n      alert('File uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error uploading file', error);\r\n    }\r\n };\r\n\r\n return (\r\n    <div>\r\n      <input type=\"file\" onChange={onFileChange} />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={onFileUpload}>\r\n        Upload\r\n      </Button>\r\n      {uploadProgress > 0 && <LinearProgress variant=\"determinate\" value={uploadProgress} />}\r\n    </div>\r\n );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,cAAc,QAAQ,eAAe;AACtD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMY,YAAY,GAAIC,CAAC,IAAK;IACzBJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IAE7B,MAAMY,MAAM,GAAG;MACbC,gBAAgB,EAAGC,aAAa,IAAK;QACnC,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAAEH,aAAa,CAACI,MAAM,GAAG,GAAG,GAAIJ,aAAa,CAACK,KAAK,CAAC;QACvFhB,iBAAiB,CAACY,gBAAgB,CAAC;MACrC;IACF,CAAC;IAED,IAAI;MACF,MAAMpB,KAAK,CAACyB,IAAI,CAAC,SAAS,EAAEX,QAAQ,EAAEG,MAAM,CAAC;MAC7CS,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACH,CAAC;EAED,oBACGzB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEtB;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7CjC,OAAA,CAACJ,MAAM;MAACsC,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEzB,YAAa;MAAAgB,QAAA,EAAC;IAEnE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACR5B,cAAc,GAAG,CAAC,iBAAIL,OAAA,CAACH,cAAc;MAACqC,OAAO,EAAC,aAAa;MAACG,KAAK,EAAEhC;IAAe;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEV,CAAC;AAAC/B,EAAA,CApCID,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}