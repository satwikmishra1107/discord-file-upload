{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\VSCode\\\\FrontEnd\\\\a_p_do_file\\\\frontend\\\\src\\\\FileUpload\\\\UploadedFilesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Typography, List, Button, CircularProgress, Grid, Card, CardContent, Divider, makeStyles } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  card: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n  fileName: {\n    fontWeight: \"bold\",\n    marginBottom: theme.spacing(1)\n  },\n  fileSize: {\n    marginBottom: theme.spacing(1)\n  },\n  downloadButton: {\n    marginTop: theme.spacing(1)\n  }\n}));\nconst UploadedFilesList = ({\n  uploadedFiles\n}) => {\n  _s();\n  const classes = useStyles();\n  const [downloadProgress, setDownloadProgress] = useState({});\n  const handleDownload = async (fileName, fileHash, fileSize, fileExtension) => {\n    try {\n      setDownloadProgress(prevState => ({\n        ...prevState,\n        [fileHash]: 0\n      }));\n      const response = await fetch(`http://localhost:8000/api/retrieve/${fileHash}?fileSize=${fileSize}&fileExtension=${fileExtension}&fileName=${fileName}`, {\n        method: \"GET\",\n        responseType: \"blob\",\n        onProgress: event => {\n          if (event.lengthComputable) {\n            const progress = Math.round(event.loaded / event.total * 100);\n            setDownloadProgress(prevState => ({\n              ...prevState,\n              [fileHash]: progress\n            }));\n          }\n        }\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const downloadUrl = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n        link.download = `${fileName}`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        console.error(\"Error downloading file\");\n      }\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n    } finally {\n      setDownloadProgress(prevState => ({\n        ...prevState,\n        [fileHash]: 0\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.fileName,\n            gutterBottom: true,\n            children: file.fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            className: classes.fileSize,\n            children: [\"File Size: \", (file.fileSize / (1024 * 1024)).toFixed(2), \" MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.downloadButton,\n                onClick: () => handleDownload(file.fileName, file.fileHash, file.fileSize, file.fileExtension),\n                disabled: downloadProgress[file.fileHash] > 0,\n                children: downloadProgress[file.fileHash] > 0 ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  variant: \"determinate\",\n                  value: downloadProgress[file.fileHash],\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this) : \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadedFilesList, \"j3nz73nhlKL40DuAT6LhDQMgCN8=\", false, function () {\n  return [useStyles];\n});\n_c = UploadedFilesList;\nexport default UploadedFilesList;\nvar _c;\n$RefreshReg$(_c, \"UploadedFilesList\");","map":{"version":3,"names":["React","useState","Box","Typography","List","Button","CircularProgress","Grid","Card","CardContent","Divider","makeStyles","jsxDEV","_jsxDEV","useStyles","theme","root","padding","spacing","card","backgroundColor","palette","background","paper","borderRadius","marginBottom","fileName","fontWeight","fileSize","downloadButton","marginTop","UploadedFilesList","uploadedFiles","_s","classes","downloadProgress","setDownloadProgress","handleDownload","fileHash","fileExtension","prevState","response","fetch","method","responseType","onProgress","event","lengthComputable","progress","Math","round","loaded","total","ok","blob","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","console","error","className","children","variant","gutterBottom","_jsxFileName","lineNumber","columnNumber","map","file","index","color","toFixed","container","justifyContent","item","onClick","disabled","value","size","_c","$RefreshReg$"],"sources":["D:/Code/VSCode/FrontEnd/a_p_do_file/frontend/src/FileUpload/UploadedFilesList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  List,\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  makeStyles,\r\n} from \"@mui/material\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  card: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  fileName: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  fileSize: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  downloadButton: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst UploadedFilesList = ({ uploadedFiles }) => {\r\n  const classes = useStyles();\r\n  const [downloadProgress, setDownloadProgress] = useState({});\r\n\r\n  const handleDownload = async (\r\n    fileName,\r\n    fileHash,\r\n    fileSize,\r\n    fileExtension\r\n  ) => {\r\n    try {\r\n      setDownloadProgress((prevState) => ({\r\n        ...prevState,\r\n        [fileHash]: 0,\r\n      }));\r\n      const response = await fetch(\r\n        `http://localhost:8000/api/retrieve/${fileHash}?fileSize=${fileSize}&fileExtension=${fileExtension}&fileName=${fileName}`,\r\n        {\r\n          method: \"GET\",\r\n          responseType: \"blob\",\r\n          onProgress: (event) => {\r\n            if (event.lengthComputable) {\r\n              const progress = Math.round((event.loaded / event.total) * 100);\r\n              setDownloadProgress((prevState) => ({\r\n                ...prevState,\r\n                [fileHash]: progress,\r\n              }));\r\n            }\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const blob = await response.blob();\r\n        const downloadUrl = window.URL.createObjectURL(blob);\r\n        const link = document.createElement(\"a\");\r\n        link.href = downloadUrl;\r\n        link.download = `${fileName}`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      } else {\r\n        console.error(\"Error downloading file\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error downloading file:\", error);\r\n    } finally {\r\n      setDownloadProgress((prevState) => ({\r\n        ...prevState,\r\n        [fileHash]: 0,\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Uploaded Files\r\n      </Typography>\r\n      <List>\r\n        {uploadedFiles.map((file, index) => (\r\n          <Card key={index} className={classes.card}>\r\n            <CardContent>\r\n              <Typography\r\n                variant=\"h6\"\r\n                className={classes.fileName}\r\n                gutterBottom\r\n              >\r\n                {file.fileName}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                className={classes.fileSize}\r\n              >\r\n                File Size: {(file.fileSize / (1024 * 1024)).toFixed(2)} MB\r\n              </Typography>\r\n              <Divider />\r\n              <Grid container justifyContent=\"flex-end\">\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.downloadButton}\r\n                    onClick={() =>\r\n                      handleDownload(\r\n                        file.fileName,\r\n                        file.fileHash,\r\n                        file.fileSize,\r\n                        file.fileExtension\r\n                      )\r\n                    }\r\n                    disabled={downloadProgress[file.fileHash] > 0}\r\n                  >\r\n                    {downloadProgress[file.fileHash] > 0 ? (\r\n                      <CircularProgress\r\n                        variant=\"determinate\"\r\n                        value={downloadProgress[file.fileHash]}\r\n                        size={24}\r\n                      />\r\n                    ) : (\r\n                      \"Download\"\r\n                    )}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UploadedFilesList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}