{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\VSCode\\\\FrontEnd\\\\a_p_do_file\\\\frontend\\\\src\\\\FileUpload\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport \"./FileUpload.css\";\nimport axios from \"axios\";\nimport UploadedFilesList from \"./UploadedFilesList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const inputRef = useRef();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState(\"select\");\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n  const onChooseFile = () => {\n    inputRef.current.click();\n  };\n  const clearFileInput = () => {\n    inputRef.current.value = \"\";\n    setSelectedFile(null);\n    setProgress(0);\n    setUploadStatus(\"select\");\n  };\n  const handleUpload = async () => {\n    if (uploadStatus === \"done\") {\n      clearFileInput();\n      return;\n    }\n    try {\n      setUploadStatus(\"uploading\");\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile);\n      const response = await axios.post(\"http://localhost:8000/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        }\n      });\n      const {\n        fileName,\n        fileHash,\n        fileSize\n      } = response.data;\n\n      // console.log(fileName, fileHash, fileSize, fileExtension);\n\n      setUploadedFiles(prevFiles => [...prevFiles, {\n        fileName,\n        fileHash,\n        fileSize\n      }]);\n      setUploadStatus(\"done\");\n    } catch (error) {\n      setUploadStatus(\"select\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"file\",\n      onChange: handleFileChange,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), !selectedFile && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"file-btn\",\n      onClick: onChooseFile,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), \" Upload File\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined icon\",\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bg\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  width: `${progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), uploadStatus === \"select\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearFileInput,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-outlined close-icon\",\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"check-circle\",\n            children: uploadStatus === \"uploading\" ? `${progress}%` : uploadStatus === \"done\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-outlined\",\n              style: {\n                fontSize: \"20px\"\n              },\n              children: \"check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-btn\",\n        onClick: handleUpload,\n        children: uploadStatus === \"select\" || uploadStatus === \"uploading\" ? \"Upload\" : \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(UploadedFilesList, {\n      uploadedFiles: uploadedFiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"3sMIrSsbYYeagWK2NLJCxWn53LY=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useRef","useState","axios","UploadedFilesList","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","_s","inputRef","selectedFile","setSelectedFile","progress","setProgress","uploadStatus","setUploadStatus","uploadedFiles","setUploadedFiles","handleFileChange","event","target","files","length","onChooseFile","current","click","clearFileInput","value","handleUpload","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","fileName","fileHash","fileSize","data","prevFiles","error","children","ref","type","onChange","style","display","_jsxFileName","lineNumber","columnNumber","className","onClick","flex","name","width","fontSize","_c","$RefreshReg$"],"sources":["D:/Code/VSCode/FrontEnd/a_p_do_file/frontend/src/FileUpload/FileUpload.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport \"./FileUpload.css\";\r\nimport axios from \"axios\";\r\nimport UploadedFilesList from \"./UploadedFilesList\";\r\n\r\n\r\nconst FileUpload = () => {\r\n  const inputRef = useRef();\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState(\"select\");\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n\r\n  const handleFileChange = (event) => {\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      setSelectedFile(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onChooseFile = () => {\r\n    inputRef.current.click();\r\n  };\r\n\r\n  const clearFileInput = () => {\r\n    inputRef.current.value = \"\";\r\n    setSelectedFile(null);\r\n    setProgress(0);\r\n    setUploadStatus(\"select\");\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (uploadStatus === \"done\") {\r\n      clearFileInput();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploadStatus(\"uploading\");\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n\r\n      const response = await axios.post(\r\n        \"http://localhost:8000/api/upload\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n          onUploadProgress: (progressEvent) => {\r\n            const percentCompleted = Math.round(\r\n              (progressEvent.loaded * 100) / progressEvent.total\r\n            );\r\n            setProgress(percentCompleted);\r\n          },\r\n        }\r\n      );\r\n\r\n      const { fileName, fileHash, fileSize } = response.data;\r\n\r\n      // console.log(fileName, fileHash, fileSize, fileExtension);\r\n\r\n      setUploadedFiles((prevFiles) => [\r\n        ...prevFiles,\r\n        { fileName, fileHash, fileSize },\r\n      ]);\r\n      setUploadStatus(\"done\");\r\n    } catch (error) {\r\n      setUploadStatus(\"select\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        ref={inputRef}\r\n        type=\"file\"\r\n        onChange={handleFileChange}\r\n        style={{ display: \"none\" }}\r\n      />\r\n      {/* Button to trigger the file input dialog */}\r\n      {!selectedFile && (\r\n        <button className=\"file-btn\" onClick={onChooseFile}>\r\n          <span className=\"material-symbols-outlined\">upload</span> Upload File\r\n        </button>\r\n      )}\r\n      {selectedFile && (\r\n        <>\r\n          <div className=\"file-card\">\r\n            <span className=\"material-symbols-outlined icon\">description</span>\r\n            <div className=\"file-info\">\r\n              <div style={{ flex: 1 }}>\r\n                <h6>{selectedFile?.name}</h6>\r\n                <div className=\"progress-bg\">\r\n                  <div className=\"progress\" style={{ width: `${progress}%` }} />\r\n                </div>\r\n              </div>\r\n              {uploadStatus === \"select\" ? (\r\n                <button onClick={clearFileInput}>\r\n                  <span className=\"material-symbols-outlined close-icon\">\r\n                    close\r\n                  </span>\r\n                </button>\r\n              ) : (\r\n                <div className=\"check-circle\">\r\n                  {uploadStatus === \"uploading\" ? (\r\n                    `${progress}%`\r\n                  ) : uploadStatus === \"done\" ? (\r\n                    <span\r\n                      className=\"material-symbols-outlined\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                    >\r\n                      check\r\n                    </span>\r\n                  ) : null}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <button className=\"upload-btn\" onClick={handleUpload}>\r\n            {uploadStatus === \"select\" || uploadStatus === \"uploading\"\r\n              ? \"Upload\"\r\n              : \"Done\"}\r\n          </button>\r\n        </> \r\n      )}\r\n      <UploadedFilesList uploadedFiles={uploadedFiles} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAO,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGpD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGV,MAAM,CAAC,CAAC;EAEzB,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,QAAQ,CAAC;EAC1D,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMkB,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACvDX,eAAe,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACxC;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBd,QAAQ,CAACe,OAAO,CAACC,KAAK,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BjB,QAAQ,CAACe,OAAO,CAACG,KAAK,GAAG,EAAE;IAC3BhB,eAAe,CAAC,IAAI,CAAC;IACrBE,WAAW,CAAC,CAAC,CAAC;IACdE,eAAe,CAAC,QAAQ,CAAC;EAC3B,CAAC;EAED,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAId,YAAY,KAAK,MAAM,EAAE;MAC3BY,cAAc,CAAC,CAAC;MAChB;IACF;IAEA,IAAI;MACFX,eAAe,CAAC,WAAW,CAAC;MAE5B,MAAMc,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAErB,YAAY,CAAC;MAErC,MAAMsB,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,IAAI,CAC/B,kCAAkC,EAClCJ,QAAQ,EACR;QACEK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,gBAAgB,EAAGC,aAAa,IAAK;UACnC,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAChCH,aAAa,CAACI,MAAM,GAAG,GAAG,GAAIJ,aAAa,CAACK,KAC/C,CAAC;UACD5B,WAAW,CAACwB,gBAAgB,CAAC;QAC/B;MACF,CACF,CAAC;MAED,MAAM;QAAEK,QAAQ;QAAEC,QAAQ;QAAEC;MAAS,CAAC,GAAGZ,QAAQ,CAACa,IAAI;;MAEtD;;MAEA5B,gBAAgB,CAAE6B,SAAS,IAAK,CAC9B,GAAGA,SAAS,EACZ;QAAEJ,QAAQ;QAAEC,QAAQ;QAAEC;MAAS,CAAC,CACjC,CAAC;MACF7B,eAAe,CAAC,MAAM,CAAC;IACzB,CAAC,CAAC,OAAOgC,KAAK,EAAE;MACdhC,eAAe,CAAC,QAAQ,CAAC;IAC3B;EACF,CAAC;EAED,oBACEX,OAAA;IAAA4C,QAAA,gBACE5C,OAAA;MACE6C,GAAG,EAAExC,QAAS;MACdyC,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAEjC,gBAAiB;MAC3BkC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAX,QAAA,EAAAY,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,EAED,CAAC9C,YAAY,iBACZN,OAAA;MAAQqD,SAAS,EAAC,UAAU;MAACC,OAAO,EAAEnC,YAAa;MAAAyB,QAAA,gBACjD5C,OAAA;QAAMqD,SAAS,EAAC,2BAA2B;QAAAT,QAAA,EAAC;MAAM;QAAAN,QAAA,EAAAY,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,gBAC3D;IAAA;MAAAd,QAAA,EAAAY,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,EACA9C,YAAY,iBACXN,OAAA,CAAAE,SAAA;MAAA0C,QAAA,gBACE5C,OAAA;QAAKqD,SAAS,EAAC,WAAW;QAAAT,QAAA,gBACxB5C,OAAA;UAAMqD,SAAS,EAAC,gCAAgC;UAAAT,QAAA,EAAC;QAAW;UAAAN,QAAA,EAAAY,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnEpD,OAAA;UAAKqD,SAAS,EAAC,WAAW;UAAAT,QAAA,gBACxB5C,OAAA;YAAKgD,KAAK,EAAE;cAAEO,IAAI,EAAE;YAAE,CAAE;YAAAX,QAAA,gBACtB5C,OAAA;cAAA4C,QAAA,EAAKtC,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEkD;YAAI;cAAAlB,QAAA,EAAAY,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7BpD,OAAA;cAAKqD,SAAS,EAAC,aAAa;cAAAT,QAAA,eAC1B5C,OAAA;gBAAKqD,SAAS,EAAC,UAAU;gBAACL,KAAK,EAAE;kBAAES,KAAK,EAAG,GAAEjD,QAAS;gBAAG;cAAE;gBAAA8B,QAAA,EAAAY,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAd,QAAA,EAAAY,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3D,CAAC;UAAA;YAAAd,QAAA,EAAAY,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACL1C,YAAY,KAAK,QAAQ,gBACxBV,OAAA;YAAQsD,OAAO,EAAEhC,cAAe;YAAAsB,QAAA,eAC9B5C,OAAA;cAAMqD,SAAS,EAAC,sCAAsC;cAAAT,QAAA,EAAC;YAEvD;cAAAN,QAAA,EAAAY,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAd,QAAA,EAAAY,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,gBAETpD,OAAA;YAAKqD,SAAS,EAAC,cAAc;YAAAT,QAAA,EAC1BlC,YAAY,KAAK,WAAW,GAC1B,GAAEF,QAAS,GAAE,GACZE,YAAY,KAAK,MAAM,gBACzBV,OAAA;cACEqD,SAAS,EAAC,2BAA2B;cACrCL,KAAK,EAAE;gBAAEU,QAAQ,EAAE;cAAO,CAAE;cAAAd,QAAA,EAC7B;YAED;cAAAN,QAAA,EAAAY,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,GACL;UAAI;YAAAd,QAAA,EAAAY,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACN;QAAA;UAAAd,QAAA,EAAAY,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAd,QAAA,EAAAY,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNpD,OAAA;QAAQqD,SAAS,EAAC,YAAY;QAACC,OAAO,EAAE9B,YAAa;QAAAoB,QAAA,EAClDlC,YAAY,KAAK,QAAQ,IAAIA,YAAY,KAAK,WAAW,GACtD,QAAQ,GACR;MAAM;QAAA4B,QAAA,EAAAY,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA,eACT,CACH,eACDpD,OAAA,CAACF,iBAAiB;MAACc,aAAa,EAAEA;IAAc;MAAA0B,QAAA,EAAAY,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAd,QAAA,EAAAY,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAAChD,EAAA,CA5HID,UAAU;AAAAwD,EAAA,GAAVxD,UAAU;AA8HhB,eAAeA,UAAU;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}